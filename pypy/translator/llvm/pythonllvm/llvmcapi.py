# generated by 'xml2py'
# flags 'llvmcapi.xml -l ../llvmcapi/llvmcapi.so -o llvmcapi.tmp'
from cc import *
STRING = c_char_p



def ExecutionEngine__create__(MP, ForceInterpreter):
    # ../llvmcapi/include/ExecutionEngine/ExecutionEngine.h 12
    return ExecutionEngine__create__._api_(MP, ForceInterpreter)
ExecutionEngine__create__ = cdecl(c_void_p, 'llvmcapi', [c_void_p, c_int]) (ExecutionEngine__create__)


def ExecutionEngine_getModule(EE):
    # ../llvmcapi/include/ExecutionEngine/ExecutionEngine.h 13
    return ExecutionEngine_getModule._api_(EE)
ExecutionEngine_getModule = cdecl(c_void_p, 'llvmcapi', [c_void_p]) (ExecutionEngine_getModule)


def ExecutionEngine_n_functions(EE):
    # ../llvmcapi/include/ExecutionEngine/ExecutionEngine.h 14
    return ExecutionEngine_n_functions._api_(EE)
ExecutionEngine_n_functions = cdecl(c_int, 'llvmcapi', [c_void_p]) (ExecutionEngine_n_functions)


def Module__init__(ModuleID):
    # ../llvmcapi/include/VMCore/Module.h 8
    return Module__init__._api_(ModuleID)
Module__init__ = cdecl(c_void_p, 'llvmcapi', [STRING]) (Module__init__)


def Module_getModuleIdentifier(M):
    # ../llvmcapi/include/VMCore/Module.h 9
    return Module_getModuleIdentifier._api_(M)
Module_getModuleIdentifier = cdecl(STRING, 'llvmcapi', [c_void_p]) (Module_getModuleIdentifier)


def Module_setModuleIdentifier(M, ID):
    # ../llvmcapi/include/VMCore/Module.h 10
    return Module_setModuleIdentifier._api_(M, ID)
Module_setModuleIdentifier = cdecl(None, 'llvmcapi', [c_void_p, STRING]) (Module_setModuleIdentifier)


def Module_getTargetTriple(M):
    # ../llvmcapi/include/VMCore/Module.h 11
    return Module_getTargetTriple._api_(M)
Module_getTargetTriple = cdecl(STRING, 'llvmcapi', [c_void_p]) (Module_getTargetTriple)


def Module_setTargetTriple(M, T):
    # ../llvmcapi/include/VMCore/Module.h 12
    return Module_setTargetTriple._api_(M, T)
Module_setTargetTriple = cdecl(None, 'llvmcapi', [c_void_p, STRING]) (Module_setTargetTriple)


def Module_getModuleInlineAsm(M):
    # ../llvmcapi/include/VMCore/Module.h 17
    return Module_getModuleInlineAsm._api_(M)
Module_getModuleInlineAsm = cdecl(STRING, 'llvmcapi', [c_void_p]) (Module_getModuleInlineAsm)


def Module_setModuleInlineAsm(M, Asm):
    # ../llvmcapi/include/VMCore/Module.h 18
    return Module_setModuleInlineAsm._api_(M, Asm)
Module_setModuleInlineAsm = cdecl(None, 'llvmcapi', [c_void_p, STRING]) (Module_setModuleInlineAsm)


def Module_ParseAssemblyString(M, AsmString):
    # ../llvmcapi/include/VMCore/Module.h 19
    return Module_ParseAssemblyString._api_(M, AsmString)
Module_ParseAssemblyString = cdecl(None, 'llvmcapi', [c_void_p, STRING]) (Module_ParseAssemblyString)


def Module_verifyModule(M):
    # ../llvmcapi/include/VMCore/Module.h 20
    return Module_verifyModule._api_(M)
Module_verifyModule = cdecl(c_int, 'llvmcapi', [c_void_p]) (Module_verifyModule)


def ExistingModuleProvider__init__(M):
    # ../llvmcapi/include/VMCore/ModuleProvider.h 8
    return ExistingModuleProvider__init__._api_(M)
ExistingModuleProvider__init__ = cdecl(c_void_p, 'llvmcapi', [c_void_p]) (ExistingModuleProvider__init__)


def toggle_print_machineinstrs():
    # ../llvmcapi/include/llvmcapi.h 13
    return toggle_print_machineinstrs._api_()
toggle_print_machineinstrs = cdecl(None, 'llvmcapi', []) (toggle_print_machineinstrs)

