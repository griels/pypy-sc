#!/usr/bin/python

import path
import sys
import random
from pypy.tool.build import config

def parse_options(config):
    # merge system + compile options into one optionparser
    from optparse import OptionParser, OptionGroup
    from pypy.config.config import to_optparse

    optparser = OptionParser()
    sog = OptionGroup(optparser, 'system', 'System options')
    system_options = to_optparse(config.system_config, 
                                    config.system_config.getpaths())
    [sog.add_option(o) for o in system_options.option_list[1:]]
    optparser.add_option_group(sog)
    
    cog = OptionGroup(optparser, 'compile', 'Compile options')
    compile_options = to_optparse(config.compile_config, 
                                    config.compile_config.getpaths())
    [cog.add_option(o) for o in compile_options.option_list[1:]]
    optparser.add_option_group(cog)

    (options, args) = optparser.parse_args()

    if not args or len(args) != 1:
        optparser.error('please provide an email address')

    return optparser, options, args

initcode = """
    import sys
    sys.path += %r
    
    try:
        from pypy.tool.build import ppbserver
        ret = ppbserver.compile(%r, (%r, %r))
        channel.send(ret)
        channel.close()
    except:
        import sys, traceback
        exc, e, tb = sys.exc_info()
        channel.send(str(exc) + ' - ' + str(e))
        for line in traceback.format_tb(tb):
            channel.send(line[:-1])
        del tb
"""
def init(gw, sysinfo, compileinfo, path, email, port=12321):
    from pypy.tool.build import execnetconference

    conference = execnetconference.conference(gw, port, False)
    channel = conference.remote_exec(initcode % (path, email, 
                                                    sysinfo, compileinfo))
    return channel

if __name__ == '__main__':
    from py.execnet import SshGateway, PopenGateway
    from pypy.tool.build.server import config_to_dict

    optparser, options, args = parse_options(config)

    sysinfo = config_to_dict(config.system_config)
    compileinfo = config_to_dict(config.compile_config)

    print 'going to start compile job with info:'
    for k, v in sysinfo.items():
        print '%s: %r' % (k, v)
    print
    for k, v in compileinfo.items():
        print '%s: %r' % (k, v)
    print

    if config.server in ['localhost', '127.0.0.1']:
        gw = PopenGateway()
    else:
        gw = SshGateway(config.server)
    channel = init(gw, sysinfo, compileinfo, config.path, args[0], 
                    port=config.port)
    data = channel.receive()
    if type(data) == str:
        print data
        for line in channel:
            print line
    elif type(data) != tuple:
        raise ValueError, 'invalid data returned: %r' % (data,)
    else:
        ispath, data = data
        if ispath:
            print ('a suitable result is already available, you can find it '
                    'at "%s"' % (data,))
        else:
            print data
            print 'you will be mailed once it\'s ready'
    channel.close()
    gw.exit()
