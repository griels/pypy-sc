#!/usr/bin/python

import path
import sys
import random
from pypy.tool.build import config as buildconfig

from py.execnet import SshGateway, PopenGateway
from pypy.tool.build.client import init, zip_result
from pypy.config.config import to_optparse, Config
from pypy.config import pypyoption

from pypy.translator.goal import targetpypystandalone
from pypy.translator.driver import TranslationDriver
from pypy.tool.udir import udir

if buildconfig.server in ['localhost', '127.0.0.1']:
    gw = PopenGateway()
else:
    gw = SshGateway(buildconfig.server)
    
channel = init(gw,
               buildconfig.system_config,
               path=buildconfig.path,
               port=buildconfig.port)

print channel.receive() # welcome message
try:
    try:
        while 1:
            data = channel.receive()
            if isinstance(data, str):
                continue
            if not isinstance(data, tuple): # needs more checks here
                raise ValueError(
                    'received wrong unexpected data of type %s' % (
                            type(data),)
                )
            sysinfo, compileinfo = data
            accepting = True
            for checker in config.client_checkers:
                if not checker(sysinfo, compileinfo):
                    accepting = False
                    break
            channel.send(accepting)
            if not accepting:
                print 'refusing compilation'
                continue
            # XXX we should compile here, using data dict for info
            print 'compilation requested for info %r\n\nbuilding...' % (
                    data,)
            config = pypyoption.get_pypy_config()
            config.override(compileinfo)

            # XXX compile here...
            driver = TranslationDriver.from_targetspec(
                        targetpypystandalone.__dict__, config=config,
                        default_goal='compile')
            driver.proceed(['compile'])

            zip_result(udir, channel)
            
            print 'done with compilation, waiting for next'
    except EOFError:
        sys.exit()
finally:
    channel.close()
    gw.exit()
