* provide an importer that can import packages
  consider PEP 302, new import hooks try to write as much as
  possible in app-level how would PyPy import CPython extension when
  it runs on top of CPython?

* slicing with assigments & more small things 
  lst[::-2] = lst2

* (documentation) generate a nice dot-graph from the structure of PyPy

* trash the standard unittest framework/enhance it (there already
  is some new version-in-progress in tool/newtest.py)

* (documentation) remove/retire all web-pages referencing e.g.
  AnnSpace or other deprecated stuff

* make application-level types work for (1) StdObjSpace types and (2)
  core interpreter objects. 

* Review, enhance the new mixed-level module mechanism
  (e.g. the module/builtin*.py files comprise the builtin module)
  and try to apply the same technique for the application level 
  type definitions (types.py) 

* review, 

* clear out and do a clean implementation of multimethod delegation.
  The idea is to give 'kinds' to arguments according to their use,
  e.g. 'numeric argument' or 'object whose identity is preserved'.
  A 'kind' encapsulates a set of delegation functions. Armin has
  already written documentation for the envisioned new multimethod 
  implementation:

  http://codespeak.net/pypy/index.cgi?doc/objspace/multimethod

* enhance the translator components to accept more of PyPy ...
