
Frequently Asked Questions
==========================

How fast is PyPy?

    As of August 2005, PyPy was succesfully translated to C.
    The version of PyPy that still runs on top of CPython
    is slower by a factor of 2000 compared to CPython. The translated
    versions seems to be roughly 300 times slower than CPython.
    On the other hand, the really interesting question is: Why is
    PyPy so slow?

.. _whysoslow:

Why is PyPy so slow?

    Our translation process does not try to optimize the produced code
    very much.  So far the project has been focused on getting a well
    tested very compliant self-contained static Python implementation.
    During end 2005 and 2006 we are targetting optimizations at various 
    levels.  If you then still think that PyPy is slow then we will 
    have to find a better answer :-) 

What is RPython? 

    RPython is the restricted subset of the Python language that 
    we are able to translate to machine level code.  A major part of 
    PyPy's interpreter and type implementations is written 
    in this restricted style.  For a more exhaustive definitions
    please refer to `RPython`_. 

Do I have to rewrite my programs in RPython?

    No.  PyPy always runs your code in its own interpreter, which is
    a full and compliant Python 2.4 interpreter.  RPython is only
    the language in which parts of PyPy itself are written.

How do I compile PyPy?

    See the `getting-started`_ guide.  Note that at the moment this
    produces an executable that contains a lot of things that are
    hard-coded for your particular system (including paths), so it's
    not really suitable for being installed or redistributed.

.. _`RPython`: coding-guide.html#rpython
.. _`getting-started`: getting-started.html
