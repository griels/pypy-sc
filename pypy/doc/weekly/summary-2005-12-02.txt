=======================
  This Week in PyPy 5
=======================

Introduction
============

This is the fifth of what will hopefully be many summaries of what's
been going on in the world of PyPy in the last week.  I'd still like
to remind people that when something worth summarizing happens to
recommend if for "This Week in PyPy" as mentioned on:

    http://codespeak.net/pypy/dist/pypy/doc/weekly/

where you can also find old summaries.  I note in passing that the
idea of keeping track of IRC conversations in the weekly summary has
pretty much fizzled.  Oh well.

There were about 230 commits to the pypy section of codespeak's
repository in the last week (a busy one, it seems :-).


SomePBC-refactoring
===================

We merged the branch at last!  Finishing the branch off and getting
translate_pypy running again seemed to mostly involve fighting with
memoized functions and methods, and the "strange details" hinted at in
the last "This Week in PyPy" were not so bad -- indeed once we got to
the point of rtyping finishing, the backend optimizations, source
generation, compilation and resulting binary all worked first time
(there must be something to be said for this Test Driven Development
stuff :).

If you recall from the second This Week in PyPy the thing that
motivated us to start the branch was wanting to support multiple
independent object spaces in the translated binary.  After three weeks
of refactoring we hoped we'd made this possible... and so it proved,
though a couple of small tweaks were needed to the PyPy source.  The
resulting binary is quite a lot (40%) bigger but only a little (10%)
slower.


CCC papers
==========

As mentioned last week, two PyPy talks have been accepted for the
Chaos Communication Congress.  The CCC asks that speakers provide
papers to accompany their talks (they make a proceedings book) so
that's what we've done, and the results are two quite nice pieces of
propaganda for the project:

    http://codespeak.net/pypy/extradoc/talk/22c3/agility.pdf
    http://codespeak.net/pypy/extradoc/talk/22c3/techpaper.pdf

It's still possible to attend the conference in Berlin, from December
27th to the 30th:

    http://events.ccc.de/congress/2005

A number of PyPy people will be around and innocently mixing with
people from other communities and generally be available for
discussing all things PyPy and the future.


Background work regarding EU involvement 
============================================

Less visible but requiring quite some work, organisations
funding and organizing the EU PyPy project are currently 
preparing a lot of paperwork and reports.  Most of the (technical)
reports are done by now but the next Gothenborg sprint
will still internally start with two days of finalizing
those reports.  Let's all hope that everything
goes well regarding our first major EU review end January.

Meanwhile, Holger was invited to give a talk about PyPy's
technical organisation at a workshop from the german EU office
on the 5th December.  Also, Bea, Alastair and Holger will
talk about PyPy at an EU workshop in Bruxelles.  Hopefully, this 
provides us some more insights and possibilities to have PyPy
recognized as an interesting "live" project within
the EU context. 


Where did PyPy-sync go?
=======================

What's a pypy-sync meeting? Apparently::

    It's an XP-style meeting that serves to synchronize
    development work and let everybody know who is 
    working on what.  It also serves as a decision 
    board of the PyPy active developers.  If discussions 
    last too long and decisions cannot be reached 
    they are delegated to a sub-group or get postponed. 

pypy-sync meetings usually happen on thursdays at 1pm CET on the
#pypy-sync IRC channel on freenode, with an agenda prepared beforehand
and minutes posted to pypy-dev after the meeting.  Except that the
last couple haven't really happened this way -- no agenda and only a
few people have turned up and mostly just the people who are in #pypy
all week anyway.

So after the Gtbg sprint next week we're going to try harder to
prepare and get developers to attend pypy-sync meetings again.  This
is especially important as we head towards more varied and less
intrinsically related challenges such as a JIT compiler, integration
of logic programming, GC, higher level backend and much more.

