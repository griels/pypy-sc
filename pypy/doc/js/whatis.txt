============================================
What is pypy.js (JavaScript backend of pypy)
============================================

Author:
=======

Maciej Fijalkowski, fijal@genesilico.pl

Purpose:
========

This document explains what pypy.js is and (just as important) what it is not.

What is it?
-----------

Pypy.web is RPython to javascript converter and a set of tools which
evolved during pypy developement. By `using`_ it you can write down RPython
code (static enough subset of python) which get translated into JavaScript
and then run it in a browser. As an addon you can get access to 
semi-transparent rendering of AJAX calls.

This means that you might expect python semantics: ie. when you're trying to get
non-existing key from a dictionary, you'll get a KeyError, not an undefined element.
If you prefer JavaScript semantics there is no point in using pypy.web, if
you instead prefer Python semantics this is a good point. Some of
errors might appear at a compile time (such as wrong number of arguments
to function, non-existing global variable, non-existing method call).

This also means that you will get some python features - such as exception handling
, list comprehensions etc. But you'll not get python dynamic features - overloading
operators, dynamic modifications of \_\_dict\_\_ and such.

This also means that it is much easier to write code in pypy.js than in
JavaScript itself. The whole `b'n'b demo`_ is just about 250 lines of code, with
many AJAX calls. Imagine writing it in JavaScript.

There are also facilities for testing your python code (about to be translated
to a JavaScript) on top of Python. For further details see `testing`_

.. _`using`: using.html
.. _`b'n'b demo`: http://play1.codespeak.net:7070
.. _`testing`: testing.html

What is it not?
---------------

