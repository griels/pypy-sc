test_pprint 
    fails because  "dict.__repr__ is dict.__repr__" equals False

test_syntax fails because "del f()" produces SyntaxError with message = 
    "can't assign to function call" instead of "can't delete function call". 
    The test is for "delete" to be in the message

test_exceptions fails with exception message mismatches:
    'continue' not allowed inside 'finally' clause (<fragment>, 5)
    instead oof 'continue' not supported inside 'finally' clause
    and
    'continue' outside loop (<fragment>, 2)
    instead of 'continue' not properly in loop
    and
    'continue' outside loop (<fragment>, 1)
    instead of 'continue' not properly in loop

test_import 
    fails because os.open is case insensitive (at least on Mac os X)

multiple tests fail because from __future__ import division does 
not work (true division is never enabled)

test_iterlen (ale will work on this) FIXED  (finally) 

    fails because len is not implemented for SeqIter (and
    other structures like generators (reversed) )
    
test_compiler 
    fails because of "maximum recursion depth exceeded"

test_decorator
    fails because globals and locals are None in a nested function ?

test_enumerate FIXED by skippiing a test for an implementation detail .

test_builtin
    - our compilers need to recognize BOM markers
    - eval etc  should accept dict subclasses
    - hex/oct should output '-' for negative numbers
    - FIXED unicode("\u0663", 'raw-unicode-escape') does not work properly
    - disallow interning of string subclasses
    - __future__ import division problems


test_mutants
   still crashes because it does a str() on a a mutating dict
   which results in a RuntimeError, what does CPython output in this case?

test_marshal
   even with our new complete marshall support enabled this one has
   failures

test_tuple etc
   do we want to support x is x*1 where x is exactly a tuple?

test_new FIXED

test_extcall
   cannot be fixed.  PyPy produces different TypeError messages but they are
   also correct and useful (reviewed them again).

test_optparse FIXED


test_sort FIXED
   different way of detecting mutations during sort: PyPy didn't detect
   changes done by the __del__ method of the key-wrapper objects.

test_str FIXED
   there's some optimisation tests failing => disabled them

test_tempfile
  still failing

test_exceptions
  mismatch in SyntaxError messages


test_cpickle
test_descr
   FIXED? should be re-run.  Were fixed in modified-2.3.4, but then they
   were somehow lost when we switched to 2.4.1...

test_sys (FIXED)
    refcount test disabled (considered implementation detail from CPython)

test_multibytecodec
    needs the gb18030 codec, part of the CJK codecs. either remove this test
    from core or maybe fake or reimplement the CJK codecs?

test_traceback
    test_nocaret fails because the examined SyntaxError doesn't carry a
    line number

test_trace
    Fails because of our compiler generating different linenumber information
    than CPythons.
